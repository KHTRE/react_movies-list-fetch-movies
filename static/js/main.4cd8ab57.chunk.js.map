{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/api/movies.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovieFromServer","movieName","fetch","then","response","json","FindMovie","addMovie","moviesList","useState","input","setInput","searchWasMade","setSearchWasMade","movieFromServer","setMovieFromServer","findMovie","a","Response","noMovieFound","duplicate","findIndex","cantAddToList","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","disabled","App","setMovies","currentList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4cd8ab57.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=1094a50a&t=';\n\nexport function getMovieFromServer(movieName: string) {\n  const url = API_URL + movieName;\n\n  return fetch(url).then(response => response.json());\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovieFromServer } from '../api/movies';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype AddMovie = (movieFromServer: Movie) => void;\n\ninterface Props {\n  addMovie: AddMovie;\n  moviesList: Movie[];\n}\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { addMovie, moviesList } = props;\n  const [input, setInput] = useState('');\n  const [searchWasMade, setSearchWasMade] = useState(false);\n  const [movieFromServer, setMovieFromServer] = useState<Movie>({\n    Poster: '',\n    Title: '',\n    Plot: '',\n    imdbID: '',\n  });\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInput(event.target.value);\n  };\n\n  const findMovie = async (movieName: string) => {\n    const movie = await getMovieFromServer(movieName);\n\n    if (movie.Response === 'True') {\n      setMovieFromServer(movie);\n    } else {\n      setMovieFromServer({\n        Poster: '',\n        Title: '',\n        Plot: '',\n        imdbID: '',\n      });\n    }\n\n    setInput('');\n    setSearchWasMade(true);\n  };\n\n  const handleAddToList = () => {\n    addMovie(movieFromServer);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    findMovie(input);\n  };\n\n  const noMovieFound = !movieFromServer.Title && searchWasMade;\n  const duplicate = moviesList.findIndex(movie => movie.imdbID === movieFromServer.imdbID);\n  const cantAddToList = !movieFromServer.Title || duplicate >= 0;\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={classNames('input', { 'is-danger': noMovieFound })}\n                value={input}\n                onChange={handleInput}\n              />\n            </div>\n          </label>\n\n          {noMovieFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleAddToList}\n              disabled={cantAddToList}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movieFromServer.Title\n          ? <MovieCard movie={movieFromServer} />\n          : <span>Please enter the movie title and press the find button</span>}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[] | []>([]);\n\n  const addMovie = (movieFromServer: Movie) => {\n    setMovies(currentList => [...currentList, movieFromServer]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} moviesList={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}